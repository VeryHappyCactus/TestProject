ЧТо не было сделано/не сделано:
 - Readme.md фал не создавал!!! (тестовый проект, не вижу смысла)
 - Не создавал доп. индексы на таблицы (не имеет смыла, тестовый проект, не понятно какие запросы будут)
 - Не делал денормализацию (тестовый проект, таблицы не большие, не понятно какие будут запросы)
 - Сделал все просто и на сколько возможно быстро, хоть что-то показать. ЧТобы что-то написать стоющее нужно время.
 
 
 - По Handlers в проекте ServiceLogic: Сделал блокировки при отправке request сообщений в очередь. 
	Т.е. отправили request сообщение в очередь, блокируем поток и ждем ответа, чтобы было удобно тестировать через OpenApi.
 - Не реализовывал для сервиса внутреннюю очередь сообщений. Т.е. когда пришло сообщение для сервиса-апи (Service/ServiceLogic), мы регистрируем сообщение, 
	далее добавляем сообщение в RabbitMQ и отпускаем апи. После обработки сообщениея бэкендом (Backend), 
	осуществляется отправка результата обратно RabbitMQ. Далее, получением его сервисом-апи (Service/ServiceLogic).
	При такой реализации, нам бы пришлось переодически опрашивать сервис-апи (Service) для получения результата.

Проект реализован сугубо как тестовый!

  Для запуска: 
    - Нужно сделать стартовым проект: docker-compose и запустить с настройкой DockerCompose
	- Настрокий docker compose, находятся в: docker-compose.yml 
	- Файлы с настройками для Common.Secret.SecretManager: docker-compose/DockerFiles/BackendSecret.json, docker-compose/DockerFiles/ServiceSecret.json
	- Папка с SQL скриптами, в корневой папке: TestProject/SQLScripts
	
	